


Data Modeling is the process of defining how data is stored and defining relationships that exist among differnet entities in your data

A proper data model has the following benefits:

1. Easier to manage your data
2. Makes queries more efficient
3. Uses less memory and CPU
4. Reduces Costs

The Document models accepts schemas but does not enforce them

Ways to model data:
Embedding and referencing

Data that is accessed together, shoudl be stored together

Common Relationships:

one to one - one entity in a dataset is connected to one other entity in a dataset 
one to many - A relationship where a data entity in one set is connected to any number of data entities in another set
many to many - A relationship where any number of entities in one set are connected to any number of data entities in another set


Embedding:
 We take related data and inset it into our Document - Avoids application joins and provides better performance for read operations - Allows developers to update related data in a single write operation - can be slow since whole document is read in memory as a whole and continously adding data without limit created unbounded documents and may exceed the BSON document threshold of 16MB
 Data that is accessed together should be stored together by using Document Embedding
Referencing:
 We Refer to documents in another collection in our document - to store related info in separated document or collections
 just use the _id of a document in another document as a link between the two. Simple and efficient in most use cases
 No duplication of data and smaller documents - Query needs to run on multiple documents and may use more resources


Problems as the array grows larger:
- It will take up more space in memory 
- May impact write performance 
- Difficult to perform pagination of comments 
- Maximum document size of 16 MB will lead to storage problems







--------------------Additional Info-----------------------
Schema Anti-Patterns:
means things you should not do in mongodb:
 - Massive arrays
 - large number of collections: max recommended is 10000
 - unnecessary Indexes
 - Bloated documents
 - Case Insensitivity