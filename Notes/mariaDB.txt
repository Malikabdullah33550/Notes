sudo apt install mariadb
systemctl status mariadb
mysql_secure_installation
follow along the guided Installation
To enter mySQL as root:
sudo mysql
commands:
----------------entered SQL-------------------
show databases;
create database [database-name];
show databases;
drop databse [database-name];   (to delete a database)
use [databse-name];
CREATE TABLE [table-name] (
    -> id INT(10),
    -> name VARCHAR(50),
    -> score INT(10)
    -> );
SHOW TABLES;
DESC [table-name];      (to describe the table's structure)
INSERT INTO [table-name] (
    -> id, name, score )
    -> VALUES ( 1, 'John', 99);
SELECT * FORM [table-name];
SELECT [column-name] FROM [table-name];
SELECT * FROM [table-name] WHERE id=2;
UPDATE [table-name] SET [column-name]=101, name='George1'
    -> WHERE id=3;


-------------managing Permissions in SQL----------------
SELECT * FROM mysql.user;
show databases;
use mysql;   (default mysql database in mariadb)
show tables;
#there is a table named user in mysql, which contains all the users in a list
SELECT * FROM mysql.user;
#not readable information
SELECT * FROM mysql.user \G
SELECT Host, User, Password FROM mysql.user;
CREATE USER '[username]'@'[localhost]'
    -> IDENTIFIED BY '[password]';
exit;
----------------Entering MYSQL as a new user--------------
mysql -u [username] -p'[password]'
instead of the above command, run the following command to preseve you password

mysql -u [username] -p
Enter Password:
-----------------Connecting to remote mySQL database-------------

mysql -h [host IP] -u [username] -p
Enter Password:

By Default, mySQL only allows connections from localhost, 

nc -zv [host IP] [port = 3306]

To allow remote logins, you need to change the allowed IP addresses as shown below
TO get the binding configuration file; run this command:
sudo grep -r 'bind' /etc/mysql/

sudo vim /etc/mysql/mariadb.conf.d/50-server.cnf

change the bind address in this file from 127.0.0.1 to 0.0.0.0

sudo systemctl restart mysql

now connect using netstat

nc -zv [host IP] [port=3306]
mysql -h [host IP] -u [username] -p
Enter Password:

Access Denied!
(PERMISSION DENIED)

to allow access, go to mysql, 

sudo mysql

UPDATE mysql.user SET Host='[Accessing IP]/[allows all access or %]';
FLUSH PRIVILEGES;

mysql -h [host IP] -u [username] -p
Enter Password:
WELCOME TO MYSQL!


DROP USER '[username]'@'[IP of user]';
CREATE USER '[username]'@'[%]' IDENTIFIED BY '123';
show databases;
GRANT SELECT/ALL ON devops.* TO '[username]'@'%';
FLUSH PRIVILEGES;

now the above created user has access to all the tables in the devops database;




# https://www.youtube.com/watch?v=EfJEG0dHQpE&t=1572s
#16 DevOps From Scratch | MySQL Intro for DevOps Engineers
